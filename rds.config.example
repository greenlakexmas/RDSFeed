<?xml version="1.0" encoding="utf-8" ?>
<RDSFeed>
  <!-- RefreshInterval
      The time duration loop speed, measured in seconds. This setting will refresh a new message every 30 seconds.
  -->
  <RefreshInterval>30</RefreshInterval>
  <!-- MergeFile
      The target file for holding the current RDS output.
  -->
  <MergeFile>c:\Users\me\radio.txt</MergeFile>
  <!-- Sources
      Sources generate the text information to be sent over RDS. Each source is defined here.
  -->
  <Sources>
    <!-- Source
      A Source has a name (unique in the overall list) and the type (the fully-qualified class name.)
 
    A source for Facebook is defined.
    An implementation for Facebook is already included in RDSFeed. The Constructor parameters require 
    authentication data obtained from the Facebook API developer portal (https://developers.facebook.com/apps).
    -->
    <Source name="Facebook" type="GreenlakeChristmas.RDSFeed.DataSources.Facebook.FacebookDataSource">
      <!-- RefreshInterval
      The time duration loop speed, measured in seconds. This setting will refresh data from Facebook
      every 30 seconds.
      -->
      <RefreshInterval>30</RefreshInterval>
      <!-- Priority
      Determines how quickly text updates are handled. Priority is either "Immediate" or "General". With Immediate
      priority, a text update is sent over RDS right away. With General priority, the text update will occur in
      FIFO order.
      -->
      <Priority>General</Priority>
      <!-- Constructor
      The Constructor defines Parameters for instantiating an instance of the Source at runtime.
      -->
      <Constructor>
      <!-- Parameter
      The Parameter is a name and value pair. Parameters are used in reflective instantiation of the Source, and
      are order dependent.
      -->
        <Parameter name="applicationid" value="{your-application-id}" />
        <Parameter name="applicationsecret" value="{your-application-secret}" />
        <Parameter name="objectid" value="{your-objectid}" />
      </Constructor>
      <!-- Templates
      Templates define text output at runtime from programmatic methods. One or more templates
      may be defined.
      
      Templates also define a rotation, which dictates the order of processing for the templates.
      Two rotation types are supported: RoundRobin and Random. When RoundRobin rotation is used, 
      each template will be executed in the order they are defined in this configuration file.
      In Random rotation, a template is randomly selected each time template processing occurs.
      -->
      <Templates rotation="RoundRobin">
        <!-- Case
        A Case defines a specific scenario when a template is to be applied.
        When: defines the lookup key to be evaluated to determine if a template is to be used. Each Case
        must have a unique "when" in the list of cases.

        Method: the programmatic method on the class to execute. Any Case method must return a string array. 
        Each method will specifically return one or more string values to be applied to a template. 
        Documentation about the method provides the list of possible values.

        Template: the formatted text string to be used in generating text output. This is a standard C#
        string format structure, with parameters referenced in curly brackets with numerical reference
        to a parameter list (0,1,2,etc.)
        -->
        <Case when="Checkins" method="GetCheckins" template="{0} people have checked in at Greenlake Christmas on Facebook" />
        <Case when="TalkingAboutCount" method="GetTalkingAboutCount" template="{0} people are talking about Greenlake Christmas on Facebook" />
        <Case when="Likes" method="GetLikes" template="{0} people like Greenlake Christmas on Facebook" />
        <Case when="WereHereCount" method="GetWereHereCount" template="{0} people were at Greenlake Christmas on Facebook" />
      </Templates>
    </Source>
    <Source name="LORMediaFile" type="GreenlakeChristmas.RDSFeed.DataSources.TextFile.TextFileDataSource">
      <RefreshInterval>5</RefreshInterval>
      <Priority>Immediate</Priority>
      <Constructor>
        <Parameter name="textfilepath" value="c:\Users\me\song.txt" />
      </Constructor>
      <Templates>
        <Case when="SongTitle" method="GetSongTitle" template="{0}" />
      </Templates>
    </Source>
    <!-- FourSquare
    An implementation for FourSquare is already included. The Constructor parameters require authentication
    data obtained from the FourSquare API developer portal (https://foursquare.com/developers/apps).
    -->
    <Source name="FourSquare" type="GreenlakeChristmas.RDSFeed.DataSources.Foursquare.FoursquareDataSource">
      <RefreshInterval>30</RefreshInterval>
      <Priority>General</Priority>
      <Constructor>
        <Parameter name="oauthtoken" value="{your-oauth-token}" />
        <Parameter name="venueid" value="{your-venue-id}" />
        <Parameter name="datafilepath" value="c:\Users\me\4sq.txt" />
      </Constructor>
      <Templates rotation="RoundRobin">
        <Case when="Checkin" method="GetCheckin" template="{0} checked in on 4square on {1} {2}" />
        <Case when="Mayor" method="GetMayor" template="{0} is the Mayor of Greenlake Christmas on 4square" />
      </Templates>
    </Source>
    <!-- Twitter
    An implementation for Twitter is already included. The Constructor parameters require authentication
    data obtained from the Twitter API developer portal (https://dev.twitter.com/).
    -->
    <Source name="Twitter" type="GreenlakeChristmas.RDSFeed.DataSources.Twitter.TwitterDataSource">
      <RefreshInterval>30</RefreshInterval>
      <Priority>General</Priority>
      <Constructor>
        <Parameter name="accesstoken" value="{your-access-token}" />
        <Parameter name="accesstokensecret" value="{your-access-token-secret}" />
        <Parameter name="consumerkey" value="{your-consumer-key}" />
        <Parameter name="consumersecret" value="{your-consumer-secret}" />
      </Constructor>
      <Options>
        <Parameter name="hashtag" value="christmas" />
      </Options>
      <Templates rotation="Random">
        <Case when="Mention" method="GetMention" template="{2}({0})" />
        <Case when="Retweet" method="GetRetweet" template="{2}({0})" />
        <Case when="Tweet" method="GetTweet" template="{2}({0})" />
        <Case when="Hashtag" method="GetHashTweet" template="{2}({0})" />
      </Templates>
    </Source>
  </Sources>
</RDSFeed>